###########
# BUILDER #
###########

# pull official base image
FROM python:3.7.13-buster as builder

# set work directory
RUN mkdir -p /app
WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get install -y postgresql postgresql-contrib gcc python3

# lint
RUN pip install --upgrade pip
RUN pip install flake8==3.9.2
COPY . .
#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.7.13-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN useradd -U app

# install libraries
RUN apt-get update && apt-get install libpq-dev

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
COPY --from=builder /app/wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy project
COPY . $APP_HOME

# copy NLTK data
COPY ./nltk_data/tokenizers /home/app/nltk_data/tokenizers

# set rights to entrypoint.prod.sh
RUN sed -i 's/\r$//g'  $APP_HOME/shell/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/shell/entrypoint.prod.sh

# chown all the files to the app_user user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
#ENTRYPOINT ["/home/app/web/shell/entrypoint.prod.sh"]
